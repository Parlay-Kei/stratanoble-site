// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // Custom fields for Strata Noble
  stripeCustomerId String? @unique
  tier             String? // 'lite', 'growth', 'partner'
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  invoices    Invoice[]
  metricFeeds MetricFeed[]
  ndas        NDA[]
  client      Client?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Strata Noble business models
model Client {
  id               String   @id @default(cuid())
  email            String   @unique
  name             String
  tier             String   // 'lite', 'growth', 'partner'
  stripeCustomerId String?  @unique
  userId           String?  @unique // Link to User table
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  user        User?        @relation(fields: [userId], references: [id])
  invoices    Invoice[]
  metricFeeds MetricFeed[]
}

model Offering {
  id       String  @id @default(cuid())
  name     String
  tier     String  @unique
  priceId  String
  features Json
  active   Boolean @default(true)
}

model Invoice {
  id              String   @id @default(cuid())
  clientId        String?
  userId          String?
  stripeInvoiceId String   @unique
  amount          Int
  status          String
  createdAt       DateTime @default(now())

  client Client? @relation(fields: [clientId], references: [id])
  user   User?   @relation(fields: [userId], references: [id])
}

model MetricFeed {
  id        String   @id @default(cuid())
  clientId  String?
  userId    String?
  platform  String   // 'youtube', 'tiktok', etc.
  data      Json
  createdAt DateTime @default(now())

  client Client? @relation(fields: [clientId], references: [id])
  user   User?   @relation(fields: [userId], references: [id])
}

model NDA {
  id                  String    @id @default(cuid())
  userId              String
  clientEmail         String
  clientName          String
  projectDescription  String
  envelopeId          String    @unique
  status              String    // 'sent', 'delivered', 'completed', 'declined', 'voided'
  documentKey         String?   // S3 key for unsigned document
  signedDocumentKey   String?   // S3 key for signed document
  createdAt          DateTime  @default(now())
  completedAt        DateTime?
  
  user User @relation(fields: [userId], references: [id])
  
  @@index([userId])
  @@index([envelopeId])
}

model LeadSync {
  id          String   @id @default(cuid())
  email       String
  firstName   String?
  lastName    String?
  source      String   // 'contact_form', 'discovery_form', 'payment', 'newsletter'
  serviceType String?
  tier        String?
  amount      Int?
  success     Boolean  @default(false)
  syncedAt    DateTime @default(now())
  
  @@index([email])
  @@index([source])
  @@index([syncedAt])
}
