// Test SES Configuration
import { config } from 'dotenv';
import { SESv2Client, SendEmailCommand } from '@aws-sdk/client-sesv2';

// Load environment variables from .env.local
config({ path: '.env.local' });

async function testSESConfiguration() {
  console.log('üß™ Testing AWS SES Configuration...\n');
  
  // Check required environment variables
  const requiredVars = [
    'AWS_ACCESS_KEY_ID',
    'AWS_SES_SECRET', 
    'AWS_REGION',
    'SES_FROM_EMAIL'
  ];
  
  const missingVars = requiredVars.filter(varName => !process.env[varName]);
  
  if (missingVars.length > 0) {
    console.error('‚ùå Missing required environment variables:');
    missingVars.forEach(varName => {
      console.error(`   - ${varName}`);
    });
    process.exit(1);
  }
  
  console.log('‚úÖ All required environment variables are present');
  console.log(`   Region: ${process.env.AWS_REGION}`);
  console.log(`   From Email: ${process.env.SES_FROM_EMAIL}\n`);
  
  try {
    // Initialize SES client
    const sesClient = new SESv2Client({
      region: process.env.AWS_REGION,
      credentials: {
        accessKeyId: process.env.AWS_ACCESS_KEY_ID,
        secretAccessKey: process.env.AWS_SES_SECRET,
      },
    });
    
    console.log('‚úÖ SES Client initialized successfully\n');
    
    // Test email send
    const testEmail = process.env.SES_FROM_EMAIL; // Send to same verified email
    
    const command = new SendEmailCommand({
      Destination: { ToAddresses: [testEmail] },
      FromEmailAddress: process.env.SES_FROM_EMAIL,
      Content: {
        Simple: {
          Subject: { Data: 'SES Configuration Test' },
          Body: { 
            Html: { 
              Data: `
                <h2>AWS SES Test Email</h2>
                <p>This is a test email to verify your AWS SES configuration is working correctly.</p>
                <p><strong>Timestamp:</strong> ${new Date().toISOString()}</p>
                <p><strong>Region:</strong> ${process.env.AWS_REGION}</p>
                <hr>
                <small>Generated by Strata Noble SES test script</small>
              ` 
            }
          },
        },
      },
    });
    
    console.log(`üìß Attempting to send test email to: ${testEmail}`);
    
    const result = await sesClient.send(command);
    
    console.log('‚úÖ Test email sent successfully!');
    console.log(`   Message ID: ${result.MessageId}`);
    console.log(`   Check your inbox at: ${testEmail}\n`);
    
    console.log('üéâ SES Configuration Test Complete - Everything looks good!');
    
  } catch (error) {
    console.error('‚ùå SES Configuration Test Failed:');
    console.error(`   Error: ${error.message}`);
    
    if (error.name === 'MessageRejected') {
      console.error('\nüí° Possible solutions:');
      console.error('   - Verify your email/domain in SES Console');
      console.error('   - Check if you\'re in SES Sandbox mode');
      console.error('   - Ensure your "from" email is verified');
    }
    
    if (error.name === 'InvalidParameterValue') {
      console.error('\nüí° Possible solutions:');
      console.error('   - Check your AWS credentials');
      console.error('   - Verify the AWS region is correct');
      console.error('   - Ensure SES service is available in your region');
    }
    
    process.exit(1);
  }
}

testSESConfiguration().catch(console.error);